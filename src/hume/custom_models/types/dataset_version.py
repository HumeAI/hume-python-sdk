# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .dataset_version_feature_types_value import DatasetVersionFeatureTypesValue


class DatasetVersion(pydantic_v1.BaseModel):
    id: str = pydantic_v1.Field()
    """
    Hume-generated Dataset version ID
    """

    user_id: str = pydantic_v1.Field()
    """
    Hume-generated User ID
    """

    labels_file_uri: str = pydantic_v1.Field()
    """
    Dataset Labels file URI
    """

    feature_types: typing.Dict[str, DatasetVersionFeatureTypesValue] = pydantic_v1.Field()
    """
    Feature types of label mapped to feature type
    """

    dataset_id: str = pydantic_v1.Field()
    """
    Hume-generated Dataset ID of the parent Dataset
    """

    dataset_version: int = pydantic_v1.Field()
    """
    Dataset version number
    """

    created_on: int = pydantic_v1.Field()
    """
    Created date and time
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
