# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .emotion_scores import EmotionScores
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class ProsodyInference(UniversalBaseModel):
    scores: EmotionScores = pydantic.Field()
    """
    The confidence scores for 48 emotions within the detected expression of an audio sample.
    
    Scores typically range from 0 to 1, with higher values indicating a stronger confidence level in the measured attribute.
    
    See our guide on [interpreting expression measurement results](/docs/expression-measurement/faq#how-do-i-interpret-my-results) to learn more.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
