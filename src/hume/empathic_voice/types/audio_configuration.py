# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from .encoding import Encoding
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class AudioConfiguration(UniversalBaseModel):
    channels: int = pydantic.Field()
    """
    Number of audio channels.
    """

    encoding: Encoding = pydantic.Field(default="linear16")
    """
    Encoding format of the audio input, such as `linear16`.
    """

    sample_rate: int = pydantic.Field()
    """
    Audio sample rate. Number of samples per second in the audio input, measured in Hertz.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
