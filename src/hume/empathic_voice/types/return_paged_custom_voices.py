# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .return_custom_voice import ReturnCustomVoice


class ReturnPagedCustomVoices(pydantic_v1.BaseModel):
    """
    A paginated list of custom voices returned from the server
    """

    page_number: int = pydantic_v1.Field()
    """
    The page number of the returned results.
    """

    page_size: int = pydantic_v1.Field()
    """
    The number of results returned per page.
    """

    total_pages: int = pydantic_v1.Field()
    """
    The total number of pages in the collection
    """

    custom_voices_page: typing.List[ReturnCustomVoice] = pydantic_v1.Field()
    """
    List of custom voices returned for the specified page number and page size.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
