# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .model_provider_enum import ModelProviderEnum
import pydantic
from .language_model_type import LanguageModelType
import typing
from .builtin_tool_type import BuiltinToolType
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class SupportedLanguageModelEndpoint(UniversalBaseModel):
    model_provider: ModelProviderEnum = pydantic.Field()
    """
    Model provider of the language model.
    """

    model_resource: LanguageModelType = pydantic.Field()
    """
    Language model resource. Either a model name or a Websocket url.
    """

    builtin_tools: typing.List[BuiltinToolType] = pydantic.Field()
    """
    List of builtin tools supported by the language model.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
