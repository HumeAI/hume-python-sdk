# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1


class EmotionScores(pydantic_v1.BaseModel):
    admiration: float = pydantic_v1.Field(alias="Admiration")
    adoration: float = pydantic_v1.Field(alias="Adoration")
    aesthetic_appreciation: float = pydantic_v1.Field(alias="Aesthetic Appreciation")
    amusement: float = pydantic_v1.Field(alias="Amusement")
    anger: float = pydantic_v1.Field(alias="Anger")
    anxiety: float = pydantic_v1.Field(alias="Anxiety")
    awe: float = pydantic_v1.Field(alias="Awe")
    awkwardness: float = pydantic_v1.Field(alias="Awkwardness")
    boredom: float = pydantic_v1.Field(alias="Boredom")
    calmness: float = pydantic_v1.Field(alias="Calmness")
    concentration: float = pydantic_v1.Field(alias="Concentration")
    confusion: float = pydantic_v1.Field(alias="Confusion")
    contemplation: float = pydantic_v1.Field(alias="Contemplation")
    contempt: float = pydantic_v1.Field(alias="Contempt")
    contentment: float = pydantic_v1.Field(alias="Contentment")
    craving: float = pydantic_v1.Field(alias="Craving")
    desire: float = pydantic_v1.Field(alias="Desire")
    determination: float = pydantic_v1.Field(alias="Determination")
    disappointment: float = pydantic_v1.Field(alias="Disappointment")
    disgust: float = pydantic_v1.Field(alias="Disgust")
    distress: float = pydantic_v1.Field(alias="Distress")
    doubt: float = pydantic_v1.Field(alias="Doubt")
    ecstasy: float = pydantic_v1.Field(alias="Ecstasy")
    embarrassment: float = pydantic_v1.Field(alias="Embarrassment")
    empathic_pain: float = pydantic_v1.Field(alias="Empathic Pain")
    entrancement: float = pydantic_v1.Field(alias="Entrancement")
    envy: float = pydantic_v1.Field(alias="Envy")
    excitement: float = pydantic_v1.Field(alias="Excitement")
    fear: float = pydantic_v1.Field(alias="Fear")
    guilt: float = pydantic_v1.Field(alias="Guilt")
    horror: float = pydantic_v1.Field(alias="Horror")
    interest: float = pydantic_v1.Field(alias="Interest")
    joy: float = pydantic_v1.Field(alias="Joy")
    love: float = pydantic_v1.Field(alias="Love")
    nostalgia: float = pydantic_v1.Field(alias="Nostalgia")
    pain: float = pydantic_v1.Field(alias="Pain")
    pride: float = pydantic_v1.Field(alias="Pride")
    realization: float = pydantic_v1.Field(alias="Realization")
    relief: float = pydantic_v1.Field(alias="Relief")
    romance: float = pydantic_v1.Field(alias="Romance")
    sadness: float = pydantic_v1.Field(alias="Sadness")
    satisfaction: float = pydantic_v1.Field(alias="Satisfaction")
    shame: float = pydantic_v1.Field(alias="Shame")
    surprise_negative: float = pydantic_v1.Field(alias="Surprise (negative)")
    surprise_positive: float = pydantic_v1.Field(alias="Surprise (positive)")
    sympathy: float = pydantic_v1.Field(alias="Sympathy")
    tiredness: float = pydantic_v1.Field(alias="Tiredness")
    triumph: float = pydantic_v1.Field(alias="Triumph")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
