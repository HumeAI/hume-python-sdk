# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from .voice_name_enum import VoiceNameEnum
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class SupportedVoiceNameEndpoint(UniversalBaseModel):
    voice_provider: str = pydantic.Field()
    """
    Provider of the voice.
    """

    voice_name: VoiceNameEnum = pydantic.Field()
    """
    Name of the voice.
    """

    preview_url: str = pydantic.Field()
    """
    Url pointing to an audio sample.
    """

    requires_evi_2: bool = pydantic.Field()
    """
    Whether this voice requires EVI 2 (when true) or can be used in EVI 1 and 2 (when false)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
