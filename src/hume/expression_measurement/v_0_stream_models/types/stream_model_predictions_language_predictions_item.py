# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class StreamModelPredictionsLanguagePredictionsItem(UniversalBaseModel):
    text: typing.Optional[str] = pydantic.Field(default=None)
    """
    A segment of text (like a word or a sentence).
    """

    position: typing.Optional[typing.Optional[typing.Any]] = None
    emotions: typing.Optional[typing.Optional[typing.Any]] = None
    sentiment: typing.Optional[typing.Optional[typing.Any]] = None
    toxicity: typing.Optional[typing.Optional[typing.Any]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
