# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .descriptions_score import DescriptionsScore
from .emotion_score import EmotionScore
from .time_interval import TimeInterval


class BurstPrediction(UniversalBaseModel):
    time: TimeInterval
    emotions: typing.List[EmotionScore] = pydantic.Field()
    """
    A high-dimensional embedding in emotion space.
    """

    descriptions: typing.List[DescriptionsScore] = pydantic.Field()
    """
    Modality-specific descriptive features and their scores.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
