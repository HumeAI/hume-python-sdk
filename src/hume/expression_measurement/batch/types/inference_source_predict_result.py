# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
from .source import Source
import typing
from .inference_results import InferenceResults
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class InferenceSourcePredictResult(UniversalBaseModel):
    source: Source
    results: typing.Optional[InferenceResults] = None
    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    An error message.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
