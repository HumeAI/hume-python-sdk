# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .face import Face
from .language import Language
from .ner import Ner
from .prosody import Prosody
from .unconfigurable import Unconfigurable


class Models(UniversalBaseModel):
    """
    The models used for inference.
    """

    face: typing.Optional[Face] = None
    burst: typing.Optional[Unconfigurable] = None
    prosody: typing.Optional[Prosody] = None
    language: typing.Optional[Language] = None
    ner: typing.Optional[Ner] = None
    facemesh: typing.Optional[Unconfigurable] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
