# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import pydantic
from .training_custom_model import TrainingCustomModel
import typing
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class CompletedTraining(UniversalBaseModel):
    created_timestamp_ms: int = pydantic.Field()
    """
    When this job was created (Unix timestamp in milliseconds).
    """

    started_timestamp_ms: int = pydantic.Field()
    """
    When this job started (Unix timestamp in milliseconds).
    """

    ended_timestamp_ms: int = pydantic.Field()
    """
    When this job ended (Unix timestamp in milliseconds).
    """

    custom_model: TrainingCustomModel
    alternatives: typing.Optional[typing.Dict[str, TrainingCustomModel]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
