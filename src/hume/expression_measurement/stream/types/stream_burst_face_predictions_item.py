# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ....core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...types.bounding_box import BoundingBox
from ...types.emotion_embedding import EmotionEmbedding


class StreamBurstFacePredictionsItem(pydantic_v1.BaseModel):
    frame: typing.Optional[float] = pydantic_v1.Field(default=None)
    """
    Frame number
    """

    time: typing.Optional[float] = pydantic_v1.Field(default=None)
    """
    Time in seconds when face detection occurred.
    """

    bbox: typing.Optional[BoundingBox] = None
    prob: typing.Optional[float] = pydantic_v1.Field(default=None)
    """
    The predicted probability that a detected face was actually a face.
    """

    face_id: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Identifier for a face. Not that this defaults to `unknown` unless face identification is enabled in the face model configuration.
    """

    emotions: typing.Optional[EmotionEmbedding] = None
    facs: typing.Optional[EmotionEmbedding] = None
    descriptions: typing.Optional[EmotionEmbedding] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
