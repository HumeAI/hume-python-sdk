# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from .snippet import Snippet
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class ReturnGenerationChunk(UniversalBaseModel):
    generation_id: str = pydantic.Field()
    """
    A unique ID associated with this TTS generation that can be used as context for generating consistent speech style and prosody across multiple requests.
    """

    snippet: Snippet = pydantic.Field()
    """
    A speech segment containing a portion of the original text optimized for natural speech delivery.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
