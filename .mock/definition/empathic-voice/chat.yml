channel:
  path: /chat
  url: prod
  auth: false
  docs: Chat with Empathic Voice Interface (EVI)
  query-parameters:
    access_token:
      type: optional<string>
      default: ''
      docs: >-
        Access token used for authenticating the client. If not provided, an
        `api_key` must be provided to authenticate.


        The access token is generated using both an API key and a Secret key,
        which provides an additional layer of security compared to using just an
        API key.


        For more details, refer to the [Authentication Strategies
        Guide](/docs/introduction/api-key#authentication-strategies).
    config_id:
      type: optional<string>
      docs: >-
        The unique identifier for an EVI configuration.


        Include this ID in your connection request to equip EVI with the Prompt,
        Language Model, Voice, and Tools associated with the specified
        configuration. If omitted, EVI will apply [default configuration
        settings](/docs/speech-to-speech-evi/configuration/build-a-configuration#default-configuration).


        For help obtaining this ID, see our [Configuration
        Guide](/docs/speech-to-speech-evi/configuration).
    config_version:
      type: optional<integer>
      docs: >-
        The version number of the EVI configuration specified by the
        `config_id`.


        Configs, as well as Prompts and Tools, are versioned. This versioning
        system supports iterative development, allowing you to progressively
        refine configurations and revert to previous versions if needed.


        Include this parameter to apply a specific version of an EVI
        configuration. If omitted, the latest version will be applied.
    event_limit:
      type: optional<integer>
      docs: >-
        The maximum number of chat events to return from chat history. By
        default, the system returns up to 300 events (100 events per page × 3
        pages). Set this parameter to a smaller value to limit the number of
        events returned.
    resumed_chat_group_id:
      type: optional<string>
      docs: >-
        The unique identifier for a Chat Group. Use this field to preserve
        context from a previous Chat session.


        A Chat represents a single session from opening to closing a WebSocket
        connection. In contrast, a Chat Group is a series of resumed Chats that
        collectively represent a single conversation spanning multiple sessions.
        Each Chat includes a Chat Group ID, which is used to preserve the
        context of previous Chat sessions when starting a new one.


        Including the Chat Group ID in the `resumed_chat_group_id` query
        parameter is useful for seamlessly resuming a Chat after unexpected
        network disconnections and for picking up conversations exactly where
        you left off at a later time. This ensures preserved context across
        multiple sessions.


        There are three ways to obtain the Chat Group ID:


        - [Chat
        Metadata](/reference/speech-to-speech-evi/chat#receive.ChatMetadata):
        Upon establishing a WebSocket connection with EVI, the user receives a
        Chat Metadata message. This message contains a `chat_group_id`, which
        can be used to resume conversations within this chat group in future
        sessions.


        - [List Chats
        endpoint](/reference/speech-to-speech-evi/chats/list-chats): Use the GET
        `/v0/evi/chats` endpoint to obtain the Chat Group ID of individual Chat
        sessions. This endpoint lists all available Chat sessions and their
        associated Chat Group ID.


        - [List Chat Groups
        endpoint](/reference/speech-to-speech-evi/chat-groups/list-chat-groups):
        Use the GET `/v0/evi/chat_groups` endpoint to obtain the Chat Group IDs
        of all Chat Groups associated with an API key. This endpoint returns a
        list of all available chat groups.
    session_settings[audio][channels]:
      type: optional<integer>
      docs: Sets number of audio channels for audio input.
    session_settings[audio][encoding]:
      type: optional<string>
      docs: Sets encoding format of the audio input, such as `linear16`.
    session_settings[audio][sample_rate]:
      type: optional<integer>
      docs: >-
        Sets the sample rate for audio input. (Number of samples per second in
        the audio input, measured in Hertz.)
    session_settings[context][text]:
      type: optional<string>
      docs: >-
        The context to be injected into the conversation. Helps inform the LLM's
        response by providing relevant information about the ongoing
        conversation.


        This text will be appended to the end of
        [user_messages](/reference/speech-to-speech-evi/chat#receive.UserMessage.message.content)
        based on the chosen persistence level. For example, if you want to
        remind EVI of its role as a helpful weather assistant, the context you
        insert will be appended to the end of user messages as `{Context: You
        are a helpful weather assistant}`.
    session_settings[context][type]:
      type: optional<string>
      docs: >-
        The persistence level of the injected context. Specifies how long the
        injected context will remain active in the session.


        - **Temporary**: Context that is only applied to the following assistant
        response.


        - **Persistent**: Context that is applied to all subsequent assistant
        responses for the remainder of the Chat.
    session_settings[custom_session_id]:
      type: optional<string>
      docs: >-
        Used to manage conversational state, correlate frontend and backend
        data, and persist conversations across EVI sessions.
    session_settings[event_limit]:
      type: optional<integer>
      docs: >-
        The maximum number of chat events to return from chat history. By
        default, the system returns up to 300 events (100 events per page × 3
        pages). Set this parameter to a smaller value to limit the number of
        events returned.
    session_settings[language_model_api_key]:
      type: optional<string>
      docs: >-
        Third party API key for the supplemental language model.


        When provided, EVI will use this key instead of Hume's API key for the
        supplemental LLM. This allows you to bypass rate limits and utilize your
        own API key as needed.
    session_settings[system_prompt]:
      type: optional<string>
      docs: >-
        Instructions used to shape EVI's behavior, responses, and style for the
        session.


        When included in a Session Settings message, the provided Prompt
        overrides the existing one specified in the EVI configuration. If no
        Prompt was defined in the configuration, this Prompt will be the one
        used for the session.


        You can use the Prompt to define a specific goal or role for EVI,
        specifying how it should act or what it should focus on during the
        conversation. For example, EVI can be instructed to act as a customer
        support representative, a fitness coach, or a travel advisor, each with
        its own set of behaviors and response styles.


        For help writing a system prompt, see our [Prompting
        Guide](/docs/speech-to-speech-evi/guides/prompting).
    session_settings[variables]:
      type: optional<string>
      docs: >-
        This field allows you to assign values to dynamic variables referenced
        in your system prompt.


        Each key represents the variable name, and the corresponding value is
        the specific content you wish to assign to that variable within the
        session. While the values for variables can be strings, numbers, or
        booleans, the value will ultimately be converted to a string when
        injected into your system prompt.


        Using this field, you can personalize responses based on
        session-specific details. For more guidance, see our [guide on using
        dynamic
        variables](/docs/speech-to-speech-evi/features/dynamic-variables).
    session_settings[voice_id]:
      type: optional<string>
      docs: >-
        The name or ID of the voice from the `Voice Library` to be used as the
        speaker for this EVI session. This will override the speaker set in the
        selected configuration.
    verbose_transcription:
      type: optional<boolean>
      default: false
      docs: >-
        A flag to enable verbose transcription. Set this query parameter to
        `true` to have unfinalized user transcripts be sent to the client as
        interim UserMessage messages. The
        [interim](/reference/speech-to-speech-evi/chat#receive.UserMessage.interim)
        field on a
        [UserMessage](/reference/speech-to-speech-evi/chat#receive.UserMessage)
        denotes whether the message is "interim" or "final."
    api_key:
      type: optional<string>
      default: ''
      docs: >-
        API key used for authenticating the client. If not provided, an
        `access_token` must be provided to authenticate.


        For more details, refer to the [Authentication Strategies
        Guide](/docs/introduction/api-key#authentication-strategies).
  messages:
    publish:
      origin: client
      body: PublishEvent
    subscribe:
      origin: server
      body: SubscribeEvent
  examples:
    - messages:
        - type: publish
          body:
            data: data
            type: audio_input
        - type: subscribe
          body:
            type: assistant_end
imports:
  root: __package__.yml
types:
  PublishEvent:
    discriminated: false
    union:
      - type: root.AudioInput
      - type: root.SessionSettings
      - type: root.UserInput
      - type: root.AssistantInput
      - type: root.ToolResponseMessage
      - type: root.ToolErrorMessage
      - type: root.PauseAssistantMessage
      - type: root.ResumeAssistantMessage
    source:
      openapi: evi-asyncapi.json
  SubscribeEvent:
    discriminated: false
    union:
      - type: root.AssistantEnd
      - type: root.AssistantMessage
      - type: root.AssistantProsody
      - type: root.AudioOutput
      - type: root.ChatMetadata
      - type: root.WebSocketError
      - type: root.UserInterruption
      - type: root.UserMessage
      - type: root.ToolCallMessage
      - type: root.ToolResponseMessage
      - type: root.ToolErrorMessage
    source:
      openapi: evi-asyncapi.json
