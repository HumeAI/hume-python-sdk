imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list-configs:
      path: /v0/evi/configs
      method: GET
      auth: true
      display-name: List configs
      request:
        name: ConfigsListConfigsRequest
        query-parameters:
          page_number:
            type: optional<integer>
            docs: >-
              Specifies the page number to retrieve, enabling pagination.


              This parameter uses zero-based indexing. For example, setting
              `page_number` to 0 retrieves the first page of results (items 0-9
              if `page_size` is 10), setting `page_number` to 1 retrieves the
              second page (items 10-19), and so on. Defaults to 0, which
              retrieves the first page.
          page_size:
            type: optional<integer>
            docs: >-
              Specifies the maximum number of results to include per page,
              enabling pagination.


              The value must be greater than or equal to 1. For example, if
              `page_size` is set to 10, each page will include up to 10 items.
              Defaults to 10.
          restrict_to_most_recent:
            type: optional<boolean>
            docs: >-
              By default, `restrict_to_most_recent` is set to true, returning
              only the latest version of each config. To include all versions of
              each config in the list, set `restrict_to_most_recent` to false.
          name:
            type: optional<string>
            docs: Filter to only include configs with this name.
      response:
        docs: Success
        type: root.ReturnPagedConfigs
      examples:
        - response:
            body:
              page_number: 1
              page_size: 1
              total_pages: 1
              configs_page:
                - id: id
                  version: 1
                  version_description: version_description
                  name: name
                  created_on: 1
                  modified_on: 1
                  prompt:
                    id: id
                    version: 1
                    version_type: FIXED
                    name: name
                    created_on: 1
                    modified_on: 1
                    text: text
                  voice:
                    provider: HUME_AI
                  ellm_model:
                    allow_short_responses: true
                  timeouts:
                    inactivity:
                      enabled: true
                    max_duration:
                      enabled: true
    create-config:
      path: /v0/evi/configs
      method: POST
      auth: true
      display-name: Create config
      request:
        name: PostedConfig
        body:
          properties:
            name:
              type: string
              docs: Name applied to all versions of a particular Config.
            version_description:
              type: optional<string>
              docs: An optional description of the Config version.
            prompt: optional<root.PostedPromptSpec>
            voice:
              type: optional<root.PostedVoice>
              docs: A voice specification associated with this Config.
            language_model:
              type: optional<root.PostedLanguageModel>
              docs: >-
                The supplemental language model associated with this Config.


                This model is used to generate longer, more detailed responses
                from EVI. Choosing an appropriate supplemental language model
                for your use case is crucial for generating fast, high-quality
                responses from EVI.
            ellm_model:
              type: optional<root.PostedEllmModel>
              docs: >-
                The eLLM setup associated with this Config.


                Hume's eLLM (empathic Large Language Model) is a multimodal
                language model that takes into account both expression measures
                and language. The eLLM generates short, empathic language
                responses and guides text-to-speech (TTS) prosody.
            tools:
              type: optional<list<optional<root.PostedUserDefinedToolSpec>>>
              docs: List of user-defined tools associated with this Config.
            builtin_tools:
              type: optional<list<optional<root.PostedBuiltinTool>>>
              docs: List of built-in tools associated with this Config.
            event_messages: optional<root.PostedEventMessageSpecs>
            timeouts: optional<root.PostedTimeoutSpecs>
      response:
        docs: Created
        type: root.ReturnConfig
      examples:
        - request:
            name: name
          response:
            body:
              id: id
              version: 1
              version_description: version_description
              name: name
              created_on: 1
              modified_on: 1
              prompt:
                id: id
                version: 1
                version_type: FIXED
                version_description: version_description
                name: name
                created_on: 1
                modified_on: 1
                text: text
              voice:
                provider: HUME_AI
                name: ITO
              language_model:
                model_provider: OPEN_AI
                model_resource: model_resource
                temperature: 1.1
              ellm_model:
                allow_short_responses: true
              tools:
                - tool_type: BUILTIN
                  id: id
                  version: 1
                  version_type: FIXED
                  version_description: version_description
                  name: name
                  created_on: 1
                  modified_on: 1
                  fallback_content: fallback_content
                  description: description
                  parameters: parameters
              builtin_tools:
                - tool_type: BUILTIN
                  name: name
                  fallback_content: fallback_content
              event_messages:
                on_new_chat:
                  enabled: true
                  text: text
                on_inactivity_timeout:
                  enabled: true
                  text: text
                on_max_duration_timeout:
                  enabled: true
                  text: text
              timeouts:
                inactivity:
                  enabled: true
                  duration_secs: 1
                max_duration:
                  enabled: true
                  duration_secs: 1
    list-config-versions:
      path: /v0/evi/configs/{id}
      method: GET
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Config. Formatted as a UUID.
      display-name: List config versions
      request:
        name: ConfigsListConfigVersionsRequest
        query-parameters:
          page_number:
            type: optional<integer>
            docs: >-
              Specifies the page number to retrieve, enabling pagination.


              This parameter uses zero-based indexing. For example, setting
              `page_number` to 0 retrieves the first page of results (items 0-9
              if `page_size` is 10), setting `page_number` to 1 retrieves the
              second page (items 10-19), and so on. Defaults to 0, which
              retrieves the first page.
          page_size:
            type: optional<integer>
            docs: >-
              Specifies the maximum number of results to include per page,
              enabling pagination.


              The value must be greater than or equal to 1. For example, if
              `page_size` is set to 10, each page will include up to 10 items.
              Defaults to 10.
          restrict_to_most_recent:
            type: optional<boolean>
            docs: >-
              By default, `restrict_to_most_recent` is set to true, returning
              only the latest version of each config. To include all versions of
              each config in the list, set `restrict_to_most_recent` to false.
      response:
        docs: Success
        type: root.ReturnPagedConfigs
      examples:
        - path-parameters:
            id: id
          response:
            body:
              page_number: 1
              page_size: 1
              total_pages: 1
              configs_page:
                - id: id
                  version: 1
                  version_description: version_description
                  name: name
                  created_on: 1
                  modified_on: 1
                  prompt:
                    id: id
                    version: 1
                    version_type: FIXED
                    name: name
                    created_on: 1
                    modified_on: 1
                    text: text
                  voice:
                    provider: HUME_AI
                  ellm_model:
                    allow_short_responses: true
                  timeouts:
                    inactivity:
                      enabled: true
                    max_duration:
                      enabled: true
    create-config-version:
      path: /v0/evi/configs/{id}
      method: POST
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Config. Formatted as a UUID.
      display-name: Create config version
      request:
        name: PostedConfigVersion
        body:
          properties:
            version_description:
              type: optional<string>
              docs: An optional description of the Config version.
            prompt: optional<root.PostedPromptSpec>
            voice:
              type: optional<root.PostedVoice>
              docs: A voice specification associated with this Config version.
            language_model:
              type: optional<root.PostedLanguageModel>
              docs: >-
                The supplemental language model associated with this Config
                version.


                This model is used to generate longer, more detailed responses
                from EVI. Choosing an appropriate supplemental language model
                for your use case is crucial for generating fast, high-quality
                responses from EVI.
            ellm_model:
              type: optional<root.PostedEllmModel>
              docs: >-
                The eLLM setup associated with this Config version.


                Hume's eLLM (empathic Large Language Model) is a multimodal
                language model that takes into account both expression measures
                and language. The eLLM generates short, empathic language
                responses and guides text-to-speech (TTS) prosody.
            tools:
              type: optional<list<optional<root.PostedUserDefinedToolSpec>>>
              docs: List of user-defined tools associated with this Config version.
            builtin_tools:
              type: optional<list<optional<root.PostedBuiltinTool>>>
              docs: List of built-in tools associated with this Config version.
            event_messages: optional<root.PostedEventMessageSpecs>
            timeouts: optional<root.PostedTimeoutSpecs>
      response:
        docs: Created
        type: root.ReturnConfig
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: id
              version: 1
              version_description: version_description
              name: name
              created_on: 1
              modified_on: 1
              prompt:
                id: id
                version: 1
                version_type: FIXED
                version_description: version_description
                name: name
                created_on: 1
                modified_on: 1
                text: text
              voice:
                provider: HUME_AI
                name: ITO
              language_model:
                model_provider: OPEN_AI
                model_resource: model_resource
                temperature: 1.1
              ellm_model:
                allow_short_responses: true
              tools:
                - tool_type: BUILTIN
                  id: id
                  version: 1
                  version_type: FIXED
                  version_description: version_description
                  name: name
                  created_on: 1
                  modified_on: 1
                  fallback_content: fallback_content
                  description: description
                  parameters: parameters
              builtin_tools:
                - tool_type: BUILTIN
                  name: name
                  fallback_content: fallback_content
              event_messages:
                on_new_chat:
                  enabled: true
                  text: text
                on_inactivity_timeout:
                  enabled: true
                  text: text
                on_max_duration_timeout:
                  enabled: true
                  text: text
              timeouts:
                inactivity:
                  enabled: true
                  duration_secs: 1
                max_duration:
                  enabled: true
                  duration_secs: 1
    delete-config:
      path: /v0/evi/configs/{id}
      method: DELETE
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Config. Formatted as a UUID.
      display-name: Delete config
      examples:
        - path-parameters:
            id: id
    update-config-name:
      path: /v0/evi/configs/{id}
      method: PATCH
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Config. Formatted as a UUID.
      display-name: Update config name
      request:
        name: PostedConfigName
        body:
          properties:
            name:
              type: string
              docs: Name applied to all versions of a particular Config.
      response:
        docs: Success
        type: text
    get-config-version:
      path: /v0/evi/configs/{id}/version/{version}
      method: GET
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Config. Formatted as a UUID.
        version:
          type: integer
          docs: >-
            Version number for a Config.


            Configs, as well as Prompts and Tools, are versioned. This
            versioning system supports iterative development, allowing you to
            progressively refine configurations and revert to previous versions
            if needed.


            Version numbers are integer values representing different iterations
            of the Config. Each update to the Config increments its version
            number.
      display-name: Get config version
      response:
        docs: Success
        type: root.ReturnConfig
      examples:
        - path-parameters:
            id: id
            version: 1
          response:
            body:
              id: id
              version: 1
              version_description: version_description
              name: name
              created_on: 1
              modified_on: 1
              prompt:
                id: id
                version: 1
                version_type: FIXED
                version_description: version_description
                name: name
                created_on: 1
                modified_on: 1
                text: text
              voice:
                provider: HUME_AI
                name: ITO
              language_model:
                model_provider: OPEN_AI
                model_resource: model_resource
                temperature: 1.1
              ellm_model:
                allow_short_responses: true
              tools:
                - tool_type: BUILTIN
                  id: id
                  version: 1
                  version_type: FIXED
                  version_description: version_description
                  name: name
                  created_on: 1
                  modified_on: 1
                  fallback_content: fallback_content
                  description: description
                  parameters: parameters
              builtin_tools:
                - tool_type: BUILTIN
                  name: name
                  fallback_content: fallback_content
              event_messages:
                on_new_chat:
                  enabled: true
                  text: text
                on_inactivity_timeout:
                  enabled: true
                  text: text
                on_max_duration_timeout:
                  enabled: true
                  text: text
              timeouts:
                inactivity:
                  enabled: true
                  duration_secs: 1
                max_duration:
                  enabled: true
                  duration_secs: 1
    delete-config-version:
      path: /v0/evi/configs/{id}/version/{version}
      method: DELETE
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Config. Formatted as a UUID.
        version:
          type: integer
          docs: >-
            Version number for a Config.


            Configs, as well as Prompts and Tools, are versioned. This
            versioning system supports iterative development, allowing you to
            progressively refine configurations and revert to previous versions
            if needed.


            Version numbers are integer values representing different iterations
            of the Config. Each update to the Config increments its version
            number.
      display-name: Delete config version
      examples:
        - path-parameters:
            id: id
            version: 1
    update-config-description:
      path: /v0/evi/configs/{id}/version/{version}
      method: PATCH
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Config. Formatted as a UUID.
        version:
          type: integer
          docs: >-
            Version number for a Config.


            Configs, as well as Prompts and Tools, are versioned. This
            versioning system supports iterative development, allowing you to
            progressively refine configurations and revert to previous versions
            if needed.


            Version numbers are integer values representing different iterations
            of the Config. Each update to the Config increments its version
            number.
      display-name: Update config description
      request:
        name: PostedConfigVersionDescription
        body:
          properties:
            version_description:
              type: optional<string>
              docs: An optional description of the Config version.
      response:
        docs: Success
        type: root.ReturnConfig
      examples:
        - path-parameters:
            id: id
            version: 1
          request: {}
          response:
            body:
              id: id
              version: 1
              version_description: version_description
              name: name
              created_on: 1
              modified_on: 1
              prompt:
                id: id
                version: 1
                version_type: FIXED
                version_description: version_description
                name: name
                created_on: 1
                modified_on: 1
                text: text
              voice:
                provider: HUME_AI
                name: ITO
              language_model:
                model_provider: OPEN_AI
                model_resource: model_resource
                temperature: 1.1
              ellm_model:
                allow_short_responses: true
              tools:
                - tool_type: BUILTIN
                  id: id
                  version: 1
                  version_type: FIXED
                  version_description: version_description
                  name: name
                  created_on: 1
                  modified_on: 1
                  fallback_content: fallback_content
                  description: description
                  parameters: parameters
              builtin_tools:
                - tool_type: BUILTIN
                  name: name
                  fallback_content: fallback_content
              event_messages:
                on_new_chat:
                  enabled: true
                  text: text
                on_inactivity_timeout:
                  enabled: true
                  text: text
                on_max_duration_timeout:
                  enabled: true
                  text: text
              timeouts:
                inactivity:
                  enabled: true
                  duration_secs: 1
                max_duration:
                  enabled: true
                  duration_secs: 1
