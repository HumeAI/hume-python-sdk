imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list-prompts:
      path: /v0/evi/prompts
      method: GET
      auth: true
      pagination:
        offset: $request.page_number
        results: $response.prompts_page
      display-name: List prompts
      request:
        name: PromptsListPromptsRequest
        query-parameters:
          page_number:
            type: optional<integer>
            docs: >-
              Specifies the page number to retrieve, enabling pagination.


              This parameter uses zero-based indexing. For example, setting
              `page_number` to 0 retrieves the first page of results (items 0-9
              if `page_size` is 10), setting `page_number` to 1 retrieves the
              second page (items 10-19), and so on. Defaults to 0, which
              retrieves the first page.
          page_size:
            type: optional<integer>
            docs: >-
              Specifies the maximum number of results to include per page,
              enabling pagination. The value must be between 1 and 100,
              inclusive.


              For example, if `page_size` is set to 10, each page will include
              up to 10 items. Defaults to 10.
          restrict_to_most_recent:
            type: optional<boolean>
            docs: >-
              By default, `restrict_to_most_recent` is set to true, returning
              only the latest version of each prompt. To include all versions of
              each prompt in the list, set `restrict_to_most_recent` to false.
          name:
            type: optional<string>
            docs: Filter to only include prompts with this name.
      response:
        docs: Success
        type: root.ReturnPagedPrompts
      examples:
        - response:
            body:
              page_number: 1
              page_size: 1
              total_pages: 1
              prompts_page:
                - id: id
                  version: 1
                  version_type: FIXED
                  version_description: version_description
                  name: name
                  created_on: 1000000
                  modified_on: 1000000
                  text: text
    create-prompt:
      path: /v0/evi/prompts
      method: POST
      auth: true
      display-name: Create prompt
      request:
        name: PostedPrompt
        body:
          properties:
            name:
              type: string
              docs: Name applied to all versions of a particular Prompt.
            version_description:
              type: optional<string>
              docs: An optional description of the Prompt version.
            text:
              type: string
              docs: >-
                Instructions used to shape EVI’s behavior, responses, and style.


                You can use the Prompt to define a specific goal or role for
                EVI, specifying how it should act or what it should focus on
                during the conversation. For example, EVI can be instructed to
                act as a customer support representative, a fitness coach, or a
                travel advisor, each with its own set of behaviors and response
                styles.


                For help writing a system prompt, see our [Prompting
                Guide](/docs/empathic-voice-interface-evi/prompting).
      response:
        docs: Created
        type: optional<root.ReturnPrompt>
      examples:
        - request:
            name: name
            text: text
          response:
            body:
              id: id
              version: 1
              version_type: FIXED
              version_description: version_description
              name: name
              created_on: 1000000
              modified_on: 1000000
              text: text
    list-prompt-versions:
      path: /v0/evi/prompts/{id}
      method: GET
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Prompt. Formatted as a UUID.
      display-name: List prompt versions
      request:
        name: PromptsListPromptVersionsRequest
        query-parameters:
          page_number:
            type: optional<integer>
            docs: >-
              Specifies the page number to retrieve, enabling pagination.


              This parameter uses zero-based indexing. For example, setting
              `page_number` to 0 retrieves the first page of results (items 0-9
              if `page_size` is 10), setting `page_number` to 1 retrieves the
              second page (items 10-19), and so on. Defaults to 0, which
              retrieves the first page.
          page_size:
            type: optional<integer>
            docs: >-
              Specifies the maximum number of results to include per page,
              enabling pagination. The value must be between 1 and 100,
              inclusive.


              For example, if `page_size` is set to 10, each page will include
              up to 10 items. Defaults to 10.
          restrict_to_most_recent:
            type: optional<boolean>
            docs: >-
              By default, `restrict_to_most_recent` is set to true, returning
              only the latest version of each prompt. To include all versions of
              each prompt in the list, set `restrict_to_most_recent` to false.
      response:
        docs: Success
        type: root.ReturnPagedPrompts
      examples:
        - path-parameters:
            id: id
          response:
            body:
              page_number: 1
              page_size: 1
              total_pages: 1
              prompts_page:
                - id: id
                  version: 1
                  version_type: FIXED
                  version_description: version_description
                  name: name
                  created_on: 1000000
                  modified_on: 1000000
                  text: text
    create-prompt-verison:
      path: /v0/evi/prompts/{id}
      method: POST
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Prompt. Formatted as a UUID.
      display-name: Create prompt version
      request:
        name: PostedPromptVersion
        body:
          properties:
            version_description:
              type: optional<string>
              docs: An optional description of the Prompt version.
            text:
              type: string
              docs: >-
                Instructions used to shape EVI’s behavior, responses, and style
                for this version of the Prompt.


                You can use the Prompt to define a specific goal or role for
                EVI, specifying how it should act or what it should focus on
                during the conversation. For example, EVI can be instructed to
                act as a customer support representative, a fitness coach, or a
                travel advisor, each with its own set of behaviors and response
                styles.


                For help writing a system prompt, see our [Prompting
                Guide](/docs/empathic-voice-interface-evi/prompting).
      response:
        docs: Created
        type: optional<root.ReturnPrompt>
      examples:
        - path-parameters:
            id: id
          request:
            text: text
          response:
            body:
              id: id
              version: 1
              version_type: FIXED
              version_description: version_description
              name: name
              created_on: 1000000
              modified_on: 1000000
              text: text
    delete-prompt:
      path: /v0/evi/prompts/{id}
      method: DELETE
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Prompt. Formatted as a UUID.
      display-name: Delete prompt
      examples:
        - path-parameters:
            id: id
    update-prompt-name:
      path: /v0/evi/prompts/{id}
      method: PATCH
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Prompt. Formatted as a UUID.
      display-name: Update prompt name
      request:
        name: PostedPromptName
        body:
          properties:
            name:
              type: string
              docs: Name applied to all versions of a particular Prompt.
      response:
        docs: Success
        type: text
    get-prompt-version:
      path: /v0/evi/prompts/{id}/version/{version}
      method: GET
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Prompt. Formatted as a UUID.
        version:
          type: integer
          docs: >-
            Version number for a Prompt.


            Prompts, as well as Configs and Tools, are versioned. This
            versioning system supports iterative development, allowing you to
            progressively refine prompts and revert to previous versions if
            needed.


            Version numbers are integer values representing different iterations
            of the Prompt. Each update to the Prompt increments its version
            number.
      display-name: Get prompt version
      response:
        docs: Success
        type: optional<root.ReturnPrompt>
      examples:
        - path-parameters:
            id: id
            version: 1
          response:
            body:
              id: id
              version: 1
              version_type: FIXED
              version_description: version_description
              name: name
              created_on: 1000000
              modified_on: 1000000
              text: text
    delete-prompt-version:
      path: /v0/evi/prompts/{id}/version/{version}
      method: DELETE
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Prompt. Formatted as a UUID.
        version:
          type: integer
          docs: >-
            Version number for a Prompt.


            Prompts, as well as Configs and Tools, are versioned. This
            versioning system supports iterative development, allowing you to
            progressively refine prompts and revert to previous versions if
            needed.


            Version numbers are integer values representing different iterations
            of the Prompt. Each update to the Prompt increments its version
            number.
      display-name: Delete prompt version
      examples:
        - path-parameters:
            id: id
            version: 1
    update-prompt-description:
      path: /v0/evi/prompts/{id}/version/{version}
      method: PATCH
      auth: true
      path-parameters:
        id:
          type: string
          docs: Identifier for a Prompt. Formatted as a UUID.
        version:
          type: integer
          docs: >-
            Version number for a Prompt.


            Prompts, as well as Configs and Tools, are versioned. This
            versioning system supports iterative development, allowing you to
            progressively refine prompts and revert to previous versions if
            needed.


            Version numbers are integer values representing different iterations
            of the Prompt. Each update to the Prompt increments its version
            number.
      display-name: Update prompt description
      request:
        name: PostedPromptVersionDescription
        body:
          properties:
            version_description:
              type: optional<string>
              docs: An optional description of the Prompt version.
      response:
        docs: Success
        type: optional<root.ReturnPrompt>
      examples:
        - path-parameters:
            id: id
            version: 1
          request: {}
          response:
            body:
              id: id
              version: 1
              version_type: FIXED
              version_description: version_description
              name: name
              created_on: 1000000
              modified_on: 1000000
              text: text
