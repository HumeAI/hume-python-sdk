# This file was auto-generated by Fern from our API Definition.

import typing

from hume.client import AsyncHumeClient, HumeClient

from ..utilities import validate_response


async def test_get_dataset(client: HumeClient, async_client: AsyncHumeClient) -> None:
    expected_response = {
        "id": "id",
        "name": "name",
        "latest_version": {
            "id": "id",
            "user_id": "user_id",
            "labels_file_uri": "labels_file_uri",
            "feature_types": {"feature_types": "CATEGORICAL"},
            "dataset_id": "dataset_id",
            "dataset_version": 1,
            "created_on": 1,
        },
        "modified_on": 1,
        "metadata": {"metadata": {"metadata": {"key": "value"}}},
    }
    expected_types: typing.Any = {
        "id": None,
        "name": None,
        "latest_version": {
            "id": None,
            "user_id": None,
            "labels_file_uri": None,
            "feature_types": ("dict", {0: (None, None)}),
            "dataset_id": None,
            "dataset_version": "integer",
            "created_on": "integer",
        },
        "modified_on": "integer",
        "metadata": ("dict", {0: (None, ("dict", {0: (None, None)}))}),
    }
    response = client.custom_models.datasets.get_dataset(id="id")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.custom_models.datasets.get_dataset(id="id")
    validate_response(async_response, expected_response, expected_types)


async def test_delete_dataset(client: HumeClient, async_client: AsyncHumeClient) -> None:
    # Type ignore to avoid mypy complaining about the function not being meant to return a value
    assert client.custom_models.datasets.delete_dataset(id="id") is None  # type: ignore[func-returns-value]

    assert await async_client.custom_models.datasets.delete_dataset(id="id") is None  # type: ignore[func-returns-value]


async def test_list_dataset_files(client: HumeClient, async_client: AsyncHumeClient) -> None:
    expected_response = [
        {
            "content": [
                {
                    "file": {
                        "id": "id",
                        "user_id": "user_id",
                        "data_type": "data_type",
                        "is_sanitized": True,
                        "is_owned_by_reader": True,
                    }
                }
            ],
            "pageable": {"offset": 1, "paged": True, "unpaged": True, "page_number": 1, "page_size": 1},
            "total": 1,
            "last": True,
            "total_elements": 1,
            "total_pages": 1,
            "size": 1,
            "number": 1,
            "sort": {"empty": True, "sorted": True, "unsorted": True},
            "first": True,
            "number_of_elements": 1,
            "empty": True,
        }
    ]
    expected_types: typing.Any = (
        "list",
        {
            0: {
                "content": (
                    "list",
                    {
                        0: {
                            "file": {
                                "id": None,
                                "user_id": None,
                                "data_type": None,
                                "is_sanitized": None,
                                "is_owned_by_reader": None,
                            }
                        }
                    },
                ),
                "pageable": {
                    "offset": "integer",
                    "paged": None,
                    "unpaged": None,
                    "page_number": "integer",
                    "page_size": "integer",
                },
                "total": "integer",
                "last": None,
                "total_elements": "integer",
                "total_pages": "integer",
                "size": "integer",
                "number": "integer",
                "sort": {"empty": None, "sorted": None, "unsorted": None},
                "first": None,
                "number_of_elements": "integer",
                "empty": None,
            }
        },
    )
    response = client.custom_models.datasets.list_dataset_files(id="id")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.custom_models.datasets.list_dataset_files(id="id")
    validate_response(async_response, expected_response, expected_types)


async def test_get_dataset_version(client: HumeClient, async_client: AsyncHumeClient) -> None:
    expected_response = {
        "id": "id",
        "user_id": "user_id",
        "labels_file_uri": "labels_file_uri",
        "feature_type_json_uri": "feature_type_json_uri",
        "dataset_id": "dataset_id",
        "dataset_version": 1,
        "created_on": 1,
        "is_most_recent_version": True,
    }
    expected_types: typing.Any = {
        "id": None,
        "user_id": None,
        "labels_file_uri": None,
        "feature_type_json_uri": None,
        "dataset_id": None,
        "dataset_version": "integer",
        "created_on": "integer",
        "is_most_recent_version": None,
    }
    response = client.custom_models.datasets.get_dataset_version(id="id")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.custom_models.datasets.get_dataset_version(id="id")
    validate_response(async_response, expected_response, expected_types)


async def test_list_dataset_version_files(client: HumeClient, async_client: AsyncHumeClient) -> None:
    expected_response = [
        {
            "content": [
                {
                    "file": {
                        "id": "id",
                        "user_id": "user_id",
                        "data_type": "data_type",
                        "is_sanitized": True,
                        "is_owned_by_reader": True,
                    }
                }
            ],
            "pageable": {"offset": 1, "paged": True, "unpaged": True, "page_number": 1, "page_size": 1},
            "total": 1,
            "last": True,
            "total_elements": 1,
            "total_pages": 1,
            "size": 1,
            "number": 1,
            "sort": {"empty": True, "sorted": True, "unsorted": True},
            "first": True,
            "number_of_elements": 1,
            "empty": True,
        }
    ]
    expected_types: typing.Any = (
        "list",
        {
            0: {
                "content": (
                    "list",
                    {
                        0: {
                            "file": {
                                "id": None,
                                "user_id": None,
                                "data_type": None,
                                "is_sanitized": None,
                                "is_owned_by_reader": None,
                            }
                        }
                    },
                ),
                "pageable": {
                    "offset": "integer",
                    "paged": None,
                    "unpaged": None,
                    "page_number": "integer",
                    "page_size": "integer",
                },
                "total": "integer",
                "last": None,
                "total_elements": "integer",
                "total_pages": "integer",
                "size": "integer",
                "number": "integer",
                "sort": {"empty": None, "sorted": None, "unsorted": None},
                "first": None,
                "number_of_elements": "integer",
                "empty": None,
            }
        },
    )
    response = client.custom_models.datasets.list_dataset_version_files(id="id")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.custom_models.datasets.list_dataset_version_files(id="id")
    validate_response(async_response, expected_response, expected_types)
