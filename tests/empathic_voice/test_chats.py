# This file was auto-generated by Fern from our API Definition.

from hume.client import AsyncHumeClient, HumeClient

from ..utilities import validate_response


async def test_list_chats(client: HumeClient, async_client: AsyncHumeClient) -> None:
    expected_response = {
        "page_number": 1,
        "page_size": 1,
        "chats_page": [
            {
                "id": "id",
                "tag": "tag",
                "status": "status",
                "start_timestamp": 1,
                "end_timestamp": 1,
                "event_count": 1,
                "metadata": "metadata",
                "config": {"id": "id"},
            }
        ],
    }
    expected_types = {
        "page_number": "integer",
        "page_size": "integer",
        "chats_page": (
            "list",
            {
                0: {
                    "id": None,
                    "tag": None,
                    "status": None,
                    "start_timestamp": "integer",
                    "end_timestamp": "integer",
                    "event_count": "integer",
                    "metadata": None,
                    "config": {"id": None},
                }
            },
        ),
    }
    response = client.empathic_voice.chats.list_chats()
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.empathic_voice.chats.list_chats()
    validate_response(async_response, expected_response, expected_types)


async def test_list_chat_events(
    client: HumeClient, async_client: AsyncHumeClient
) -> None:
    expected_response = {
        "id": "id",
        "tag": "tag",
        "status": "status",
        "start_timestamp": 1,
        "end_timestamp": 1,
        "events_page": [
            {
                "id": "id",
                "timestamp": 1,
                "role": "role",
                "type": "type",
                "message_text": "message_text",
                "emotion_features": "emotion_features",
                "metadata": "metadata",
            }
        ],
        "metadata": "metadata",
        "page_number": 1,
        "page_size": 1,
        "config": {"id": "id", "version": 1},
    }
    expected_types = {
        "id": None,
        "tag": None,
        "status": None,
        "start_timestamp": "integer",
        "end_timestamp": "integer",
        "events_page": (
            "list",
            {
                0: {
                    "id": None,
                    "timestamp": "integer",
                    "role": None,
                    "type": None,
                    "message_text": None,
                    "emotion_features": None,
                    "metadata": None,
                }
            },
        ),
        "metadata": None,
        "page_number": "integer",
        "page_size": "integer",
        "config": {"id": None, "version": "integer"},
    }
    response = client.empathic_voice.chats.list_chat_events(id="id")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.empathic_voice.chats.list_chat_events(id="id")
    validate_response(async_response, expected_response, expected_types)
